<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ctf</groupId>
  <artifactId>SSM</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>SSM Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- 对spring版进行统一的管理 -->
  <properties>
    <springframework-version>4.3.18.RELEASE</springframework-version>
 </properties>
  <dependencies>
  	<!-- 添加spring的支持 -->
  	<!-- 各个jar包的说明 --> 
  	
  	  <!--1、spring-core 包含Spring 框架基本的核心工具类。Spring 其它组件要都要使用到这个包里的类，是其它组件的基本核心，
  			当然你也可以在自己的应用系统中使用这些工具类。 外部依赖Commons Logging， (Log4J)。 -->
	  <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-core</artifactId>
	    <version>${springframework-version}</version>
	  </dependency>
	  <!-- 2、spring-beans 所有应用都要用到的，它包含访问配置文件、创建和管理bean 以及进行Inversion of Control / Dependency Injection（IoC/DI）操作相关的所有类。
	    	如果应用只需基本的IoC/DI 支持，引入spring-core.jar 及spring-beans.jar 文件就可以了。  -->
	  <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-beans</artifactId>
	    <version>${springframework-version}</version>
	  </dependency>
	  <!-- 3、spring-context 在基础IOC功能上为Spring 核心提供了大量扩展服务，此外还提供许多企业级服务的支持，有邮件服务、任务调度、JNDI定位，EJB集成、远程访问、缓存以及多种视图层框架的支持。
	  	可以找到使用Spring ApplicationContext特性时所需的全部类，JDNI 所需的全部类，instrumentation组件以及校验Validation 方面的相关类。 外部依赖spring-beans, (spring-aop)。 -->
	  <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-context</artifactId>
	    <version>${springframework-version}</version>
	  </dependency>
	  <!-- 4、spring-aop 包含在应用中使用Spring 的AOP 特性时所需的类和源码级元数据支持。
	      使用基于AOP 的Spring特性，如声明型事务管理（Declarative Transaction Management），也要在应用里包含这个jar包。 
               外部依赖spring-core， (spring-beans，AOP Alliance， CGLIB，Commons Attributes)。  -->
	  <dependency>
       <groupId>org.springframework</groupId>
       <artifactId>spring-aop</artifactId>
       <version>${springframework-version}</version>
      </dependency>
      <!-- 5、提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。  -->
	  <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>${springframework-version}</version>
	  </dependency>
	  <!--6、spring-tx 为JDBC、Hibernate、JDO、JPA等提供的一致的声明式和编程式事务管理。 -->
	  <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
         <version>${springframework-version}</version>
      </dependency>
      <!-- 7、Spring表达式语言。 -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-expression</artifactId>
         <version>${springframework-version}</version>
      </dependency>
      <!-- 8、spring-jdbc 对Spring 对JDBC 数据访问进行封装的所有类。  -->
       <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>${springframework-version}</version>
      </dependency>
      <!-- 9、支持缓存Cache（ehcache）、JCA、JMX、邮件服务（Java Mail、COS Mail）、任务计划Scheduling（Timer、Quartz）方面的类 -->
      <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context-support</artifactId>
  		<version>${springframework-version}</version>
  	  </dependency>
  	  <!-- 包含Web 应用开发时，用到Spring 框架时所需的核心类，包括自动载入Web Application Context 特性的类、Struts 与JSF 集成类、
  	  文件上传的支持类、Filter 类和大量工具辅助类。外部依赖spring-context, Servlet API, (JSP API, JSTL, Commons FileUpload, COS)。 -->
  	  <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${springframework-version}</version>
	  </dependency>
	  <!-- 包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类。
	  	外部依赖spring-web, (spring-support，Tiles，iText，POI)。-->
	  <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${springframework-version}</version>
	 </dependency>
	 <!-- spring对mybatis的支持 -->
	 <dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>1.3.2</version>
	</dependency>
	<!-- 添加mybatis支持 -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.4.6</version>
	</dependency>
	<!-- jdbc驱动包  -->
	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>5.1.46</version>
	</dependency>
	<!-- 添加日志支持 -->
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.17</version>
	</dependency>
	<!-- Apache公共包 -->
	<dependency>
	    <groupId>commons-logging</groupId>
	    <artifactId>commons-logging</artifactId>
	    <version>1.2</version>
	</dependency>
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.3.3</version>
	</dependency>
	
	<!-- servlet的支持 -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>javax.servlet-api</artifactId>
	    <version>3.1.0</version>
	    <scope>provided</scope>
	</dependency>
	<!-- 添加连接池druid支持 -->
	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>druid</artifactId>
	    <version>1.1.10</version>
	</dependency>
	<!-- 单元测试junit的支持 -->
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.12</version>
	    <scope>test</scope>
	</dependency>
	
  </dependencies>
  <build>
    <finalName>SSM</finalName>
  </build>
</project>
