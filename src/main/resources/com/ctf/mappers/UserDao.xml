<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- namespace命名空间中的值一定要对应包定义的接口"com.ctf.dao"，否则报错 -->
<mapper namespace="com.ctf.dao.UserDao"> 
   
	
	<!-- 返回List而定义的resultMap，注意column是数据库中定义的列字段，而property是我们自定义的字段，能够解决属性和数据库字段不一致的问题 -->
	<resultMap type="User" id="resultUserList">
		<id column="id" property="id"></id>
		<result column="userName" property="userName"/>
		<result column="age" property="age"/>
		<result column="password" property="password"/>
	</resultMap>
	 <!--  通过用户id返回用户信息 -->
	<select id="selectUserByID" parameterType="int" resultType="User">
		select * from `t_user` where id = #{id}
	</select>
	
	<!-- 通过用户名返回用户列表 -->
	<!-- 记住：在获取List列表的时候，resultMap="resultUserList"千万别写成resultType="resultUserList"，否则报错 -->
	<select id="getUserList" parameterType="string"  resultMap="resultUserList">
		select * from `t_user` where userName like #{userName}
	</select>
	
	 <!-- useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入到User的id属性 -->
	<insert id="insertUser"  parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into `t_user`(userName,age,password) values (#{userName},#{age},#{password})
	</insert>
	
	<update id="updateUser" parameterType="User">
		update t_user set userName=#{userName},age=#{age},password=#{password} where id=#{id}
	</update>
	
	<delete id="deleteUser" parameterType="int">
		delete from `t_user` where id=#{id}
	</delete>
	
</mapper>

